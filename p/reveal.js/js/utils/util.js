export const extend=(e,t)=>{for(let r in t)e[r]=t[r];return e};export const queryAll=(e,t)=>Array.from(e.querySelectorAll(t));export const toggleClass=(e,t,r)=>{r?e.classList.add(t):e.classList.remove(t)};export const deserialize=e=>{if("string"==typeof e){if("null"===e)return null;if("true"===e)return!0;if("false"===e)return!1;if(e.match(/^-?[\d\.]+$/))return parseFloat(e)}return e};export const distanceBetween=(e,t)=>{let r=e.x-t.x,n=e.y-t.y;return Math.sqrt(r*r+n*n)};export const transformElement=(e,t)=>{e.style.transform=t};export const matches=(e,t)=>{let r=e.matches||e.matchesSelector||e.msMatchesSelector;return!(!r||!r.call(e,t))};export const closest=(e,t)=>{if("function"==typeof e.closest)return e.closest(t);for(;e;){if(matches(e,t))return e;e=e.parentNode}return null};export const enterFullscreen=e=>{let t=(e=e||document.documentElement).requestFullscreen||e.webkitRequestFullscreen||e.webkitRequestFullScreen||e.mozRequestFullScreen||e.msRequestFullscreen;t&&t.apply(e)};export const createSingletonNode=(e,t,r,n="")=>{let l=e.querySelectorAll("."+r);for(let s=0;s<l.length;s++){let t=l[s];if(t.parentNode===e)return t}let o=document.createElement(t);return o.className=r,o.innerHTML=n,e.appendChild(o),o};export const createStyleSheet=e=>{let t=document.createElement("style");return t.type="text/css",e&&e.length>0&&(t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e))),document.head.appendChild(t),t};export const getQueryHash=()=>{let e={};location.search.replace(/[A-Z0-9]+?=([\w\.%-]*)/gi,(t=>{e[t.split("=").shift()]=t.split("=").pop()}));for(let t in e){let r=e[t];e[t]=deserialize(unescape(r))}return void 0!==e.dependencies&&delete e.dependencies,e};export const getRemainingHeight=(e,t=0)=>{if(e){let r,n=e.style.height;return e.style.height="0px",e.parentNode.style.height="auto",r=t-e.parentNode.offsetHeight,e.style.height=n+"px",e.parentNode.style.removeProperty("height"),r}return t};const fileExtensionToMimeMap={mp4:"video/mp4",m4a:"video/mp4",ogv:"video/ogg",mpeg:"video/mpeg",webm:"video/webm"};export const getMimeTypeFromFile=(e="")=>fileExtensionToMimeMap[e.split(".").pop()];