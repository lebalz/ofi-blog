const pkg=require("./package.json"),path=require("path"),glob=require("glob"),yargs=require("yargs"),colors=require("colors"),through=require("through2"),qunit=require("node-qunit-puppeteer"),{rollup:rollup}=require("rollup"),{terser:terser}=require("rollup-plugin-terser"),babel=require("@rollup/plugin-babel").default,commonjs=require("@rollup/plugin-commonjs"),resolve=require("@rollup/plugin-node-resolve").default,sass=require("sass"),gulp=require("gulp"),tap=require("gulp-tap"),zip=require("gulp-zip"),header=require("gulp-header"),eslint=require("gulp-eslint"),minify=require("gulp-clean-css"),connect=require("gulp-connect"),autoprefixer=require("gulp-autoprefixer"),root=yargs.argv.root||".",port=yargs.argv.port||8e3,host=yargs.argv.host||"localhost",banner=`/*!\n* reveal.js ${pkg.version}\n* ${pkg.homepage}\n* MIT licensed\n*\n* Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n*/\n`;process.setMaxListeners(20);const babelConfig={babelHelpers:"bundled",ignore:["node_modules"],compact:!1,extensions:[".js",".html"],plugins:["transform-html-import-to-string"],presets:[["@babel/preset-env",{corejs:3,useBuiltIns:"usage",modules:!1}]]},babelConfigESM=JSON.parse(JSON.stringify(babelConfig));babelConfigESM.presets[0][1].targets={browsers:["last 2 Chrome versions","last 2 Safari versions","last 2 iOS versions","last 2 Firefox versions","last 2 Edge versions"]};let cache={};function compileSass(){return through.obj(((e,s,t)=>{const l=e.clone();sass.render({data:l.contents.toString(),includePaths:["css/","css/theme/template"]},((s,r)=>{s?(console.log(e.path),console.log(s.formatted)):(l.extname=".css",l.contents=r.css,t(null,l))}))}))}gulp.task("js-es5",(()=>rollup({cache:cache.umd,input:"js/index.js",plugins:[resolve(),commonjs(),babel(babelConfig),terser()]}).then((e=>(cache.umd=e.cache,e.write({name:"Reveal",file:"./dist/reveal.js",format:"umd",banner:banner,sourcemap:!0})))))),gulp.task("js-es6",(()=>rollup({cache:cache.esm,input:"js/index.js",plugins:[resolve(),commonjs(),babel(babelConfigESM),terser()]}).then((e=>(cache.esm=e.cache,e.write({file:"./dist/reveal.esm.js",format:"es",banner:banner,sourcemap:!0})))))),gulp.task("js",gulp.parallel("js-es5","js-es6")),gulp.task("plugins",(()=>Promise.all([{name:"RevealHighlight",input:"./plugin/highlight/plugin.js",output:"./plugin/highlight/highlight"},{name:"RevealMarkdown",input:"./plugin/markdown/plugin.js",output:"./plugin/markdown/markdown"},{name:"RevealSearch",input:"./plugin/search/plugin.js",output:"./plugin/search/search"},{name:"RevealNotes",input:"./plugin/notes/plugin.js",output:"./plugin/notes/notes"},{name:"RevealZoom",input:"./plugin/zoom/plugin.js",output:"./plugin/zoom/zoom"},{name:"RevealMath",input:"./plugin/math/plugin.js",output:"./plugin/math/math"}].map((e=>rollup({cache:cache[e.input],input:e.input,plugins:[resolve(),commonjs(),babel({...babelConfig,ignore:[/node_modules\/(?!(highlight\.js|marked)\/).*/]}),terser()]}).then((s=>{cache[e.input]=s.cache,s.write({file:e.output+".esm.js",name:e.name,format:"es"}),s.write({file:e.output+".js",name:e.name,format:"umd"})}))))))),gulp.task("css-themes",(()=>gulp.src(["./css/theme/source/*.{sass,scss}"]).pipe(compileSass()).pipe(gulp.dest("./dist/theme")))),gulp.task("css-core",(()=>gulp.src(["css/reveal.scss"]).pipe(compileSass()).pipe(autoprefixer()).pipe(minify({compatibility:"ie9"})).pipe(header(banner)).pipe(gulp.dest("./dist")))),gulp.task("css",gulp.parallel("css-themes","css-core")),gulp.task("qunit",(()=>{let e={root:root,port:8009,host:"localhost",name:"test-server"},s=connect.server(e),t=glob.sync("test/*.html"),l=0,r=0,a=Promise.all(t.map((s=>new Promise(((t,a)=>{qunit.runQunitPuppeteer({targetUrl:`http://${e.host}:${e.port}/${s}`,timeout:2e4,redirectConsole:!1,puppeteerArgs:["--allow-file-access-from-files"]}).then((e=>{e.stats.failed>0?(console.log(`! ${s} [${e.stats.passed}/${e.stats.total}] in ${e.stats.runtime}ms`.red),qunit.printFailedTests(e,console)):console.log(`\u2714 ${s} [${e.stats.passed}/${e.stats.total}] in ${e.stats.runtime}ms`.green),l+=e.stats.total,r+=e.stats.failed,t()})).catch((e=>{console.error(e),a()}))})))));return new Promise(((e,t)=>{a.then((()=>{r>0?t(new Error(`${r}/${l} tests failed`.red)):(console.log(`\u2714 Passed ${l} tests`.green.bold),e())})).catch((()=>{t()})).finally((()=>{s.close()}))}))})),gulp.task("eslint",(()=>gulp.src(["./js/**","gulpfile.js"]).pipe(eslint()).pipe(eslint.format()))),gulp.task("test",gulp.series("eslint","qunit")),gulp.task("default",gulp.series(gulp.parallel("js","css","plugins"),"test")),gulp.task("build",gulp.parallel("js","css","plugins")),gulp.task("package",gulp.series((()=>gulp.src(["./index.html","./dist/**","./lib/**","./images/**","./plugin/**","./**.md"],{base:"./"}).pipe(zip("reveal-js-presentation.zip")).pipe(gulp.dest("./"))))),gulp.task("reload",(()=>gulp.src(["*.html","*.md"]).pipe(connect.reload()))),gulp.task("serve",(()=>{connect.server({root:root,port:port,host:host,livereload:!0}),gulp.watch(["*.html","*.md"],gulp.series("reload")),gulp.watch(["js/**"],gulp.series("js","reload","eslint")),gulp.watch(["plugin/**/plugin.js","plugin/**/*.html"],gulp.series("plugins","reload")),gulp.watch(["css/theme/source/*.{sass,scss}","css/theme/template/*.{sass,scss}"],gulp.series("css-themes","reload")),gulp.watch(["css/*.scss","css/print/*.{sass,scss,css}"],gulp.series("css-core","reload")),gulp.watch(["test/*.html"],gulp.series("test"))}));